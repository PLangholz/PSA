
<div class="container">
    <div class="jumbotron"><h1>Milestone 6: Iterating</h1></div>
</div>

<div class="container">

    <div class="img-rounded proj">
        <h2>UI design iteration</h2> 
        <p>
            To be delightful and useful, glmpse must be simple, clean, and actionable. For casual, low-friction video communication to be easy and fun, the app can't get in your way; it has to make everything really easy. It should enable you to request, receive, and share 4-second videos seamlessly and without effort.
            <br />
            For any given user, the glmpse app is really just a wrapper around glmpse video requests (incoming and outgoing) and a way to initiate, respond to, and view requests. The challenge is to organize and display the requests such that three things are immediately clear about each request:
            <ul>
                <li>Who is the requester and who is the provider?</li>
                <li>Has the request been fulfilled (i.e., is there a video attached to the request)?</li>
                <li>Does the request require the user's attention (because it's a new request from someone else or it's a request the user has spawned that now has received a response)?</li>
            </ul>
        </p>
    </div>

    <div class="img-rounded proj">
        <h3>Original Prototype</h3>
        <p>
        We started with a simple design that segregates requests by their kind and status: 
            <ul>
                <li>one page for viewing requests received from other users</li>
                <li>one for viewing requests you initiated (which doubles as a page for initiating a request)</li>
                <li>one for viewing glmpses you've received</li>
                <li>one for viewing glmpses you've provided</li>
            </ul>

        Based on user testing, we identified several deficiencies with this design, but the biggest, most serious deficiency is that the homepage doesn't give you anything to do or see. Users have to navigate to a next page to see activity. Nothing is immediately actionable.
        </p>

        <div class="row tspace2">
            <div class="col-md-3">
                <img src="images/ui/v1/home.png" width=250 />
                <div class="caption">Home page</div>
            </div>
            <div class="col-md-3">
                <img src="images/ui/v1/page.png" width=250 />
                <div class="caption">Each sub-page is a list like this.</div>
            </div>
        </div>
    </div>

    <div class="img-rounded proj">
        <h3>UI prototypes</h3>
        <p>We prototyped a few different ways of organizing and presenting content using mock-ups and Flinto (for simulating the interactivity). We tested the prototypes with test users to identify what was working and what wasn't.</p>
        

        <h4>Unified Feed</h4>
        <p>In this design, the home screen is a feed of all activity -- new requests from friends, open requests you've sent, received glimpses, and sent glimpses. Check out the flinto interaction prototype <a href="https://www.flinto.com/p/541e8bbc">here</a></p>
        <div class="row tspace2">
            <div class="col-md-3">
                <img src="images/ui/proto-screens/unified-v1.png" width=250 />
            </div>
        </div>

        <h4>Activity Feed by Friend</h4>
        <p>In this design, the home screen is a list users you're currently interacting with. Each user includes some information about the status of your interaction with that user. Clicking on a user leads you to a history of your activity with that user. Check out the flinto interaction prototype <a href="https://www.flinto.com/p/bc39d84d">here</a></p>
        <div class="row tspace2">
            <div class="col-md-3">
                <img src="images/ui/proto-screens/by-friend-home.png" width=250 />
            </div>
            <div class="col-md-3">
                <img src="images/ui/proto-screens/by-friend-friend.png" width=250 />
            </div>
        </div>        

        <h4>Activity Feed by Incoming/Outgoing</h4>
        <p>In this design, the home screen has two tabs: incoming and outgoing. Incoming is new requests that have been sent to you and video responses to your requests; outgoing is requests you've initiated and glmpses you've sent. Check out the flinto interaction prototype <a href="https://www.flinto.com/p/98c811d8">here</a></p>
        <div class="row tspace2">
            <div class="col-md-3">
                <img src="images/ui/proto-screens/inscreen.png" width=250 />
            </div>
            <div class="col-md-3">
                <img src="images/ui/proto-screens/outscreen.png" width=250 />
            </div>
        </div>     

        <p>
            We found that the unified feed was the most succesful organization of content. It required the least navigation through the app to achieve a user's goal; it immediately surfaced the content that was actionable or required attention; it gave a clear overview of all current activity, both in terms of requests the user received and the status of requests the user initiated. 
            <br />
            The downside of the design is that it requires some "learning" because it is noisy and messy. Because all content is on the same page, each individual piece of content needs a lot of information indicators -- who is this interaction with? did they request a glmpse or did I? If I received the request, have I seen it and responded to it? If I initiated the request, have I gotten a response? It took test users a bit to figure out what all of our indicators meant. 
            <br />
            In an effort to simplify the design, we iterated on the unified feed prototype:
        </p>

        <div class="row tspace2">
            <div class="col-md-3">
                <img src="images/ui/proto-screens/clean-unified.png" width=250 />
            </div>
            <div class="caption">See the Flinto prototype <a href="https://www.flinto.com/p/8c3f3d06">here</a></div>
        </div>

        <p>We were happy with the results of this UI iteration and decided to implement it. Here's a screenshot of the current home screen of our app:</p>


        <div class="row tspace2">
            <div class="col-md-3">
                <img src="images/ui/v2/home.png" width=250 />
            </div>
        </div>


    </div>

    <div class="img-rounded proj">
        <h2>Functional iteration</h2>

    </div>


    <div class="img-rounded proj">
        <h3>Text Prompts</h3>
        <img src="images/text_prompt.png" width=250 />
        <p>A major feature we added was the ability to send text prompts with requests. This was in response to two related problems:
          <ol>
            <li>Some users felt that the quality of glmpses they received was low, or they did not receive the kind of glmpse they wanted</li>
            <li>Some users struggled to decide what to record when responding to a request</li>
          </ol>
        These are issues with pull-oriented video communication. 
        When someone pushes a video, they have decided their video is worth watching, which arguably raises the chance of that video being interesting. 
        When making a glmpse request, there's a high chance the other person isn't doing anything particularly interesting, so he/she has to get creative. Creativity can be hard.
        Adding text prompts allows the glmpse requester to have more control over what they receive. Eg, if I want to know where someone is, I can ask "where are you?", and hopefully not receive a glmpse of just a face.
        Meanwhile, the glmpse provider gets some guidance. Depending on the text, the provider doesn't have to think as much, and the requester gets what he/she wants.
        Furthermore, the text prompt may allow for more of a conversation between users, since a small amount of detailed information can be passed along. 
        As a constraint, text can also encourage more creativity from users who provide unsatisfying glmpses by default.
        </p>
    </div>
    

    <div class="img-rounded proj">
        <h3>Friends</h3>
        <p>While the app is still small and in user testing, we want to keep it very open and not limit functionality. Our mentality is to see how users desire the app to be used and see how we can best facilitate that. With that in mind, we didn't want to restrict who users could request glmpses from. We did, however, want a better way to organize what used to a long list of all users. In the page where you request a glmpse we know have a friends list on top of a list of all users. </p>
        
        <h4>Friends List</h4>
        <div class="row tspace2">
            <div class="col-md-3">
                <img src="images/ui/v2/friendsList.png" width=250 />
            </div>
        </div>

        <h4>Adding Friends</h4>
        <div class="row tspace2">
            <div class="col-md-3">
                <img src="images/ui/v2/addFriend.png" width=250 />
            </div>
        </div>


    </div>

    <div class="img-rounded proj">
        <h3>Continuing Iterations: What's Coming...</h3>
        <p>With our most recent iteration only out for a few hours, we were already keen on collecting feedback from our users. Some of the most concentrated feedback we have received over the last few days involves some feature additions:
            <ul>
                <li><strong>Group glmpsing</strong>: Some users have requested a way to send glmpses to multiple people or have multiple user involved in the glmpsing process. To this we brainstormed and discussed the possibility of requesting a glmpse on behalf of a group of people so that the response was sent to the entire group. </li>
                <li><strong>Pushing glmpses</strong>: We have received a few requests from users wishing to send glmpses to people unprompted. the glmpse interface affords users the ability to quickly and effortlessly send short videos to their friends. only, however, when their friends request them and some users would like the ability to send them something when exciting or interesting. This feature would violate our pull vs push mentality but we listen to the users nonetheless. We are currently brainstorming a hand full of ways for users to offer their status or location with some specificity that would incline users to want to pull some content from them. We are also discussing the idea of allowing the push of content as well.

            </ul>
        </p>
    </div>



</div>


